name: CI/CD Workflow (build, push, and deploy)

on:
  push:
    branches:
      - main
    paths:
      - "Application/**"
      - "Kubernetes/**"
      - ".github/workflows/**"
      - "!Application/README.md"
      - "!Application/docker-compose.yaml"
      - "!Kubernetes/README.md"

env:
  PROJECT_ID: polytech-dijon
  REGION: europe-west1
  FRONT_WORKING_DIRECTORY: Application/frontend
  API_WORKING_DIRECTORY: Application/backend
  CONSUMER_WORKING_DIRECTORY: Application/consumer
  FRONT_LOCATION: europe-west1-docker.pkg.dev/polytech-dijon/polytech-dijon/app-frontend:taleb.latest
  API_LOCATION: europe-west1-docker.pkg.dev/polytech-dijon/polytech-dijon/backend-api:taleb.latest
  CONSUMER_LOCATION: europe-west1-docker.pkg.dev/polytech-dijon/polytech-dijon/backend-consumer:taleb.latest

  REDIS_PATH: Kubernetes/redis
  RABBITMQ_PATH: Kubernetes/rabbitMQ
  FRONT_PATH: Kubernetes/front
  NGINX_INGRESS_PATH: "Kubernetes/ingress-nginx"
  API_PATH: Kubernetes/api
  CONSUMER_PATH: Kubernetes/consumer
  NAMESPACE: taleb

jobs:
  build-and-push-front:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v4"

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: "Verify gcloud CLI setup"
        run: gcloud info

      - name: "Configure Docker authentication for GCP"
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: "Build and push Frontend image"
        if: contains(github.event.head_commit.modified, 'Application/frontend/') || contains(github.event.head_commit.modified, '.github/workflows/')
        run: |
          test -f Dockerfile || exit 1
          docker build . --file Dockerfile --tag ${{ env.FRONT_LOCATION }}
          docker push ${{ env.FRONT_LOCATION }}
        working-directory: ${{ env.FRONT_WORKING_DIRECTORY }}

  build-and-push-api:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v4"

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: "Verify gcloud CLI setup"
        run: gcloud info

      - name: "Configure Docker authentication for GCP"
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: "Build and push API image"
        if: contains(github.event.head_commit.modified, 'Application/backend/') || contains(github.event.head_commit.modified, '.github/workflows/')
        run: |
          test -f Dockerfile || exit 1
          docker build . --file Dockerfile --tag ${{ env.API_LOCATION }}
          docker push ${{ env.API_LOCATION }}
        working-directory: ${{ env.API_WORKING_DIRECTORY }}

  build-and-push-consumer:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v4"

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: "Verify gcloud CLI setup"
        run: gcloud info

      - name: "Configure Docker authentication for GCP"
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: "Build and push Consumer image"
        if: contains(github.event.head_commit.modified, 'Application/consumer/') || contains(github.event.head_commit.modified, '.github/workflows/')
        run: |
          test -f Dockerfile || exit 1
          docker build . --file Dockerfile --tag ${{ env.CONSUMER_LOCATION }}
          docker push ${{ env.CONSUMER_LOCATION }}
        working-directory: ${{ env.CONSUMER_WORKING_DIRECTORY }}

  deploy-with-kubernetes:
    runs-on: ubuntu-latest
    needs: [build-and-push-front, build-and-push-api, build-and-push-consumer]
    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3"

      - name: "Create .kube directory"
        run: mkdir -p $HOME/.kube

      - name: "Set up Kubernetes configuration"
        run: |
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: "Deploy to Kubernetes"
        run: |
          kubectl config set-context --current --namespace=${{ env.NAMESPACE }}

          kubectl apply -f ${{ env.RABBITMQ_PATH }}/rabbitmq-replicaset.yaml
          kubectl apply -f ${{ env.RABBITMQ_PATH }}/rabbitmq-service.yaml

          kubectl apply -f ${{ env.REDIS_PATH }}/redis-replicaset.yaml
          kubectl apply -f ${{ env.REDIS_PATH }}/redis-service.yaml

          kubectl apply -f ${{ env.FRONT_PATH }}/front-replicaset.yaml
          kubectl apply -f ${{ env.FRONT_PATH }}/front-service.yaml

          kubectl apply -f ${{ env.NGINX_INGRESS_PATH }}/nginx-ingress.yaml

          kubectl apply -f ${{ env.API_PATH }}/api-replicaset.yaml
          kubectl apply -f ${{ env.API_PATH }}/api-service.yaml

          kubectl apply -f ${{ env.CONSUMER_PATH }}/consumer-replicaset.yaml