services:

  app-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: europe-west1-docker.pkg.dev/polytech-dijon/polytech-dijon/app-frontend:taleb
    container_name: app-frontend
    ports:
      - "8080:80"
    depends_on:
      - backend-api
      - backend-consumer

  redis:
    image: redis
    container_name: myRedis
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: myRabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "status" ]
      interval: 10s
      timeout: 10s
      retries: 5

  backend-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: europe-west1-docker.pkg.dev/polytech-dijon/polytech-dijon/backend-api:taleb
    container_name: backend-api
    ports:
      - "5000:5000"
    depends_on:
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  backend-consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    image: europe-west1-docker.pkg.dev/polytech-dijon/polytech-dijon/backend-consumer:taleb
    container_name: backend-consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started

networks:
  myapp-network: {}